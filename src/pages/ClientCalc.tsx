import React, { useState } from "react";
import { Link } from "react-router-dom";
import { Calculator, ArrowLeft, AlertTriangle } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";

const ClientCalc = () => {
  const [employees, setEmployees] = useState('');
  const [monthlySalary, setMonthlySalary] = useState('');
  const [results, setResults] = useState({
    totalHumanCostMonthly: 0,
    totalHumanCostAnnual: 0,
    annualSavings: 0,
    monthlySavings: 0,
    roi: 0,
    isProfit: true
  });
  const [isCalculated, setIsCalculated] = useState(false);

  const calculateResults = () => {
    const numEmployees = parseInt(employees);
    const numMonthlySalary = parseFloat(monthlySalary.replace(/[^\d.,]/g, '').replace(',', '.'));
    
    if (isNaN(numEmployees) || isNaN(numMonthlySalary) || numEmployees <= 0 || numMonthlySalary <= 0) {
      return;
    }

    // –§–æ—Ä–º—É–ª—ã —Ä–∞—Å—á–µ—Ç–∞:
    const totalHumanCostMonthly = numMonthlySalary * numEmployees; // –º–µ—Å—è—á–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ –ª—é–¥–µ–π
    const totalHumanCostAnnual = totalHumanCostMonthly * 12; // –≥–æ–¥–æ–≤—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ –ª—é–¥–µ–π
    const aiCost = 500000; // —Å—Ç–æ–∏–º–æ—Å—Ç—å –ò–ò (–µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–æ)
    
    const annualSavings = totalHumanCostAnnual - aiCost; // –≥–æ–¥–æ–≤–∞—è —ç–∫–æ–Ω–æ–º–∏—è
    const monthlySavings = annualSavings / 12; // –º–µ—Å—è—á–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—è
    const roi = (annualSavings / aiCost) * 100; // ROI –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
    const isProfit = annualSavings > 0;

    setResults({
      totalHumanCostMonthly,
      totalHumanCostAnnual,
      annualSavings,
      monthlySavings,
      roi,
      isProfit
    });
    setIsCalculated(true);
  };

  const handleReset = () => {
    setEmployees('');
    setMonthlySalary('');
    setResults({
      totalHumanCostMonthly: 0,
      totalHumanCostAnnual: 0,
      annualSavings: 0,
      monthlySavings: 0,
      roi: 0,
      isProfit: true
    });
    setIsCalculated(false);
  };

  const formatNumber = (num: number) => {
    return new Intl.NumberFormat('ru-RU', {
      minimumFractionDigits: 0,
      maximumFractionDigits: 0
    }).format(Math.abs(num));
  };

  return (
    <div className="min-h-screen bg-gray-50 p-4">
      <div className="max-w-4xl mx-auto">
        {/* Header */}
        <div className="text-center mb-6">
          <div className="inline-flex items-center justify-center w-12 h-12 bg-brand-orange rounded-full mb-3">
            <Calculator className="w-6 h-6 text-white" />
          </div>
          <h1 className="text-2xl font-bold text-brand-darkBlue mb-2">
            –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —ç–∫–æ–Ω–æ–º–∏–∏ –ò–ò
          </h1>
          <p className="text-gray-600">
            –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –≤—ã–≥–æ–¥—É –æ—Ç –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
          </p>
        </div>

        <div className="grid lg:grid-cols-2 gap-6">
          {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
          <div className="bg-white rounded-lg shadow-sm border p-6">
            <h3 className="text-lg font-semibold text-brand-darkBlue mb-4">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å—á—ë—Ç–∞</h3>
            
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
                </label>
                <Input
                  type="number"
                  value={employees}
                  onChange={(e) => setEmployees(e.target.value)}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"
                  min="1"
                  max="1000"
                  className="w-full h-10 border border-gray-300 rounded-md"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ó–∞—Ä–ø–ª–∞—Ç–∞ –æ–¥–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –º–µ—Å—è—Ü (‚Ç∏)
                </label>
                <Input
                  type="text"
                  value={monthlySalary}
                  onChange={(e) => setMonthlySalary(e.target.value)}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—è—á–Ω—É—é –∑–∞—Ä–ø–ª–∞—Ç—É"
                  className="w-full h-10 border border-gray-300 rounded-md"
                />
              </div>

              <Button
                onClick={calculateResults}
                className="w-full bg-brand-orange hover:bg-brand-orange/90 text-white font-medium py-2"
                disabled={!employees || !monthlySalary}
              >
                –†–∞—Å—Å—á–∏—Ç–∞—Ç—å
              </Button>

              {isCalculated && (
                <Button
                  onClick={handleReset}
                  variant="outline"
                  className="w-full border border-gray-300"
                >
                  –ù–æ–≤—ã–π —Ä–∞—Å—á—ë—Ç
                </Button>
              )}
            </div>

            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ò–ò */}
            <div className="mt-6 p-4 bg-gray-50 rounded-lg">
              <h4 className="text-sm font-semibold text-gray-700 mb-2">–°—Ç–æ–∏–º–æ—Å—Ç—å –ò–ò-—Ä–µ—à–µ–Ω–∏—è:</h4>
              <div className="text-sm text-gray-600 space-y-1">
                <div>‚Ä¢ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ò–ò-–±–æ—Ç–∞ ¬´–ü–û–î –ö–õ–Æ–ß¬ª: <span className="font-semibold">500,000 ‚Ç∏</span> (–µ–¥–∏–Ω–æ—Ä–∞–∑–æ–≤–æ)</div>
                <div>‚Ä¢ –¢–∞—Ä–∏—Ñ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ: <span className="font-semibold">180,000 ‚Ç∏/–≥–æ–¥</span></div>
              </div>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
          <div className="bg-white rounded-lg shadow-sm border p-6">
            <h3 className="text-lg font-semibold text-brand-darkBlue mb-4">
              –†–µ–∑—É–ª—å—Ç–∞—Ç:
            </h3>

            {!isCalculated ? (
              <div className="text-center py-8 text-gray-500">
                <p>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –Ω–∞–∂–º–∏—Ç–µ "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å"</p>
              </div>
            ) : (
              <div className="space-y-4">
                {/* –ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ –ª—é–¥–µ–π */}
                <div className="space-y-2">
                  <div className="p-3 bg-blue-50 rounded-lg border border-blue-200">
                    <div className="text-sm text-blue-700 font-medium">–ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –º–µ—Å—è—Ü:</div>
                    <div className="text-lg font-bold text-blue-800">{formatNumber(results.totalHumanCostMonthly)} ‚Ç∏</div>
                  </div>
                  
                  <div className="p-3 bg-blue-50 rounded-lg border border-blue-200">
                    <div className="text-sm text-blue-700 font-medium">–ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –≥–æ–¥:</div>
                    <div className="text-lg font-bold text-blue-800">{formatNumber(results.totalHumanCostAnnual)} ‚Ç∏</div>
                  </div>
                </div>

                {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ –ò–ò –Ω–µ–≤—ã–≥–æ–¥–µ–Ω */}
                {!results.isProfit && (
                  <div className="p-4 bg-red-50 border border-red-200 rounded-lg">
                    <div className="flex items-center gap-2 text-red-700 mb-2">
                      <AlertTriangle className="w-5 h-5" />
                      <span className="font-semibold">–í–Ω–∏–º–∞–Ω–∏–µ!</span>
                    </div>
                    <p className="text-sm text-red-600">
                      –ü—Ä–∏ –¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –ò–ò-—Ä–µ—à–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Ä–æ–∂–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤. 
                      –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —É–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏–ª–∏ –∏—Ö –∑–∞—Ä–ø–ª–∞—Ç—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–∫–æ–Ω–æ–º–∏–∏.
                    </p>
                  </div>
                )}

                {/* –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
                <div className="space-y-3">
                  <div className={`p-4 rounded-lg border-2 ${
                    results.isProfit 
                      ? 'border-green-300 bg-green-50' 
                      : 'border-red-300 bg-red-50'
                  }`}>
                    <div className={`text-sm font-semibold mb-1 ${
                      results.isProfit ? 'text-green-700' : 'text-red-700'
                    }`}>
                      {results.isProfit ? 'üí∞ –≠–∫–æ–Ω–æ–º–∏—è –≤ –º–µ—Å—è—Ü:' : 'üìâ –£–±—ã—Ç–∫–∏ –≤ –º–µ—Å—è—Ü:'}
                    </div>
                    <div className={`text-2xl font-bold ${
                      results.isProfit ? 'text-green-600' : 'text-red-600'
                    }`}>
                      {results.isProfit ? '' : '-'}{formatNumber(results.monthlySavings)} ‚Ç∏
                    </div>
                  </div>
                  
                  <div className={`p-4 rounded-lg border-2 ${
                    results.isProfit 
                      ? 'border-green-300 bg-green-50' 
                      : 'border-red-300 bg-red-50'
                  }`}>
                    <div className={`text-sm font-semibold mb-1 ${
                      results.isProfit ? 'text-green-700' : 'text-red-700'
                    }`}>
                      {results.isProfit ? 'üéØ –≠–∫–æ–Ω–æ–º–∏—è –≤ –≥–æ–¥:' : 'üìâ –£–±—ã—Ç–∫–∏ –≤ –≥–æ–¥:'}
                    </div>
                    <div className={`text-2xl font-bold ${
                      results.isProfit ? 'text-green-600' : 'text-red-600'
                    }`}>
                      {results.isProfit ? '' : '-'}{formatNumber(results.annualSavings)} ‚Ç∏
                    </div>
                  </div>
                  
                  <div className={`p-4 rounded-lg border-2 ${
                    results.roi > 0 
                      ? 'border-purple-300 bg-purple-50' 
                      : 'border-red-300 bg-red-50'
                  }`}>
                    <div className={`text-sm font-semibold mb-1 ${
                      results.roi > 0 ? 'text-purple-700' : 'text-red-700'
                    }`}>
                      üìä ROI (–≤–æ–∑–≤—Ä–∞—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π):
                    </div>
                    <div className={`text-2xl font-bold ${
                      results.roi > 0 ? 'text-purple-600' : 'text-red-600'
                    }`}>
                      {results.roi > 0 ? '+' : ''}{formatNumber(results.roi)}%
                    </div>
                  </div>
                </div>

                {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è */}
                {results.isProfit && (
                  <div className="p-4 bg-green-50 border border-green-200 rounded-lg">
                    <p className="text-sm text-green-700">
                      <span className="font-semibold">üéâ –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!</span> –ò–ò-—Ä–µ—à–µ–Ω–∏–µ –æ–∫—É–ø–∏—Ç—Å—è –∏ –±—É–¥–µ—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω—É—é —ç–∫–æ–Ω–æ–º–∏—é.
                    </p>
                  </div>
                )}
              </div>
            )}
          </div>
        </div>

        {/* Back to Home */}
        <div className="mt-8 text-center">
          <Link to="/">
            <Button
              variant="ghost"
              className="text-brand-darkBlue hover:text-brand-orange"
            >
              <ArrowLeft className="w-4 h-4 mr-2" />
              –ù–∞ –≥–ª–∞–≤–Ω—É—é
            </Button>
          </Link>
        </div>
      </div>
    </div>
  );
};

export default ClientCalc;